name: Publish Docker image

on: 
  schedule:
    - cron: '0 0 * * *' # Runs every day at midnight
  workflow_dispatch:

jobs:
  check_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install -y jq
      
      - uses: actions/cache@v3
        id: cache
        with:
          path: **/
          key: ${{ runner.os }}/release

      - name: check geo versions
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/cloudposse/geodesic/releases/latest" | jq -r .tag_name > geo_latest_release)
          if [[ "$GEO_LATEST_RELEASE" != "$(cat geo_latest_release)" ]]; then
            echo $GEO_LATEST_RELEASE > geo_latest_release
            echo "geo_updated=true" >> $GITHUB_OUTPUT
            cat "$GITHUB_OUTPUT"
          else
            echo "geo_updated=false" >> $GITHUB_OUTPUT
          fi
        id: geo_updated

      - name: check atmos versions
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          LATEST_RELEASE=$(curl --silent "https://api.github.com/repos/cloudposse/atmos/releases/latest" | jq -r .tag_name > atmos_latest_release)
          if [[ "$ATMOS_LATEST_RELEASE" != "$(cat atmos_latest_release)" ]]; then
            echo $ATMOS_LATEST_RELEASE > atmos_latest_release
            echo "atmos_updated=true" >> $GITHUB_OUTPUT
            cat "$GITHUB_OUTPUT"
          else
            echo "atmos_updated=false" >> $GITHUB_OUTPUT
          fi
        id: atmos_updated

          
  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: check_release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: markballew/geodesic
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
